//
// AttachmentBulk.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct AttachmentBulk: Codable {

    /** ID of the attachment. */
    public var _id: String?
    public var status: ContentStatus?
    /** Title of the comment. */
    public var title: String?
    /** Date and time when the attachment was created. In format \&quot;YYYY-MM-DDTHH:mm:ss.sssZ\&quot;. */
    public var createdAt: Date?
    /** ID of the containing page.  Note: This is only returned if the attachment has a container that is a page. */
    public var pageId: String?
    /** ID of the containing blog post.  Note: This is only returned if the attachment has a container that is a blog post. */
    public var blogPostId: String?
    /** ID of the containing custom content.  Note: This is only returned if the attachment has a container that is custom content. */
    public var customContentId: String?
    /** Media Type for the attachment. */
    public var mediaType: String?
    /** Media Type description for the attachment. */
    public var mediaTypeDescription: String?
    /** Comment for the attachment. */
    public var comment: String?
    /** File ID of the attachment. This is the ID referenced in &#x60;atlas_doc_format&#x60; bodies and is distinct from the attachment ID. */
    public var fileId: String?
    /** File size of the attachment. */
    public var fileSize: Int64?
    /** WebUI link of the attachment. */
    public var webuiLink: String?
    /** Download link of the attachment. */
    public var downloadLink: String?
    public var version: Version?
    public var links: AttachmentLinks?

    public init(_id: String? = nil, status: ContentStatus? = nil, title: String? = nil, createdAt: Date? = nil, pageId: String? = nil, blogPostId: String? = nil, customContentId: String? = nil, mediaType: String? = nil, mediaTypeDescription: String? = nil, comment: String? = nil, fileId: String? = nil, fileSize: Int64? = nil, webuiLink: String? = nil, downloadLink: String? = nil, version: Version? = nil, links: AttachmentLinks? = nil) {
        self._id = _id
        self.status = status
        self.title = title
        self.createdAt = createdAt
        self.pageId = pageId
        self.blogPostId = blogPostId
        self.customContentId = customContentId
        self.mediaType = mediaType
        self.mediaTypeDescription = mediaTypeDescription
        self.comment = comment
        self.fileId = fileId
        self.fileSize = fileSize
        self.webuiLink = webuiLink
        self.downloadLink = downloadLink
        self.version = version
        self.links = links
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case status
        case title
        case createdAt
        case pageId
        case blogPostId
        case customContentId
        case mediaType
        case mediaTypeDescription
        case comment
        case fileId
        case fileSize
        case webuiLink
        case downloadLink
        case version
        case links = "_links"
    }

}
